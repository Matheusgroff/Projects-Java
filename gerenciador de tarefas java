import java.io.*;
import java.util.ArrayList;
import java.util.Scanner;

class Tarefa {
    private String descricao;
    private boolean concluida;

    public Tarefa(String descricao) {
        this.descricao = descricao;
        this.concluida = false;
    }

    public String getDescricao() {
        return descricao;
    }

    public boolean estaConcluida() {
        return concluida;
    }

    public void marcarConcluida() {
        this.concluida = true;
    }

    public void desmarcarConcluida() {
        this.concluida = false;
    }
}

class GerenciadorTarefas {
    private ArrayList<Tarefa> tarefas;

    public GerenciadorTarefas() {
        tarefas = new ArrayList<>();
    }

    public void adicionarTarefa(Tarefa tarefa) {
        tarefas.add(tarefa);
    }

    public void mostrarTarefas() {
        System.out.println("Tarefas:");
        for (int i = 0; i < tarefas.size(); i++) {
            Tarefa tarefa = tarefas.get(i);
            System.out.println((i+1) + ". [" + (tarefa.estaConcluida() ? "X" : " ") + "] " + tarefa.getDescricao());
        }
    }

    public void mostrarTarefasConcluidas() {
        System.out.println("Tarefas Concluídas:");
        for (Tarefa tarefa : tarefas) {
            if (tarefa.estaConcluida()) {
                System.out.println("- " + tarefa.getDescricao());
            }
        }
    }

    public void marcarConcluida(int indice) {
        if (indice >= 0 && indice < tarefas.size()) {
            Tarefa tarefa = tarefas.get(indice);
            tarefa.marcarConcluida();
        } else {
            System.out.println("Índice inválido.");
        }
    }

    public void desmarcarConcluida(int indice) {
        if (indice >= 0 && indice < tarefas.size()) {
            Tarefa tarefa = tarefas.get(indice);
            tarefa.desmarcarConcluida();
        } else {
            System.out.println("Índice inválido.");
        }
    }

    public void exportarTarefas(String nomeArquivo) {
        try (PrintWriter writer = new PrintWriter(new FileWriter(nomeArquivo))) {
            for (Tarefa tarefa : tarefas) {
                writer.println(tarefa.getDescricao() + "," + (tarefa.estaConcluida() ? "Concluída" : "Não Concluída"));
            }
            System.out.println("Tarefas exportadas para o arquivo " + nomeArquivo + " com sucesso.");
        } catch (IOException e) {
            System.out.println("Erro ao exportar as tarefas: " + e.getMessage());
        }
    }

    public void importarTarefas(String nomeArquivo) {
        try (Scanner scanner = new Scanner(new File(nomeArquivo))) {
            while (scanner.hasNextLine()) {
                String linha = scanner.nextLine();
                String[] partes = linha.split(",");
                String descricao = partes[0];
                boolean concluida = partes[1].equals("Concluída");
                Tarefa tarefa = new Tarefa(descricao);
                if (concluida) {
                    tarefa.marcarConcluida();
                }
                tarefas.add(tarefa);
            }
            System.out.println("Tarefas importadas do arquivo " + nomeArquivo + " com sucesso.");
        } catch (FileNotFoundException e) {
            System.out.println("Arquivo não encontrado: " + e.getMessage());
        }
    }
}

public class GerenciadorTarefasApp {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        GerenciadorTarefas gerenciador = new GerenciadorTarefas();

        while (true) {
            System.out.println("Menu:");
            System.out.println("1. Adicionar tarefa");
            System.out.println("2. Mostrar tarefas");
            System.out.println("3. Mostrar tarefas concluídas");
            System.out.println("4. Marcar tarefa como concluída");
            System.out.println("5. Desmarcar tarefa como concluída");
            System.out.println("6. Exportar tarefas");
            System.out.println("7. Importar tarefas");
            System.out.println("8. Sair");
            System.out.print("Escolha uma opção: ");
            int opcao = scanner.nextInt();

            switch (opcao) {
                case 1:
                    scanner.nextLine(); // Consumir a nova linha pendente
                    System.out.print("Descrição da tarefa: ");
                    String descricao = scanner.nextLine();
                    gerenciador.adicionarTarefa(new Tarefa(descricao));
                    break;
                case 2:
                    gerenciador.mostrarTarefas();
                    break;
                case 3:
                    gerenciador.mostrarTarefasConcluidas();
                    break;
                case 4:
                    System.out.print("Índice da tarefa a ser marcada como concluída: ");
                    int indiceConcluir = scanner.nextInt() - 1;
                    gerenciador.marcarConcluida(indiceConcluir);
                    break;
                case 5:
                    System.out.print("Índice da tarefa a ser desmarcada como concluída: ");
                    int indiceDesconcluir = scanner.nextInt() - 1;
                    gerenciador.desmarcarConcluida(indiceDesconcluir);
                    break;
                case 6:
                    scanner.nextLine(); // Consumir a nova linha pendente
                    System.out.print("Nome do arquivo para exportar tarefas: ");
                    String nomeArquivoExportacao = scanner.nextLine();
                    gerenciador.exportarTarefas(nomeArquivoExportacao);
                    break;
                case 7:
                    scanner.nextLine(); // Consumir a nova linha pendente
                    System.out.print("Nome do arquivo para importar tarefas: ");
                    String nomeArquivoImportacao = scanner.nextLine();
                    gerenciador.importarTarefas(nomeArquivoImportacao);
                    break;
                case 8:
                    System.out.println("Saindo...");
                    System.exit(0);
                default:
                    System.out.println("Opção inválida. Tente novamente.");
                    break;
            }
        }
    }
}
